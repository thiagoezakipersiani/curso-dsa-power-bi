setwd("C:/Users/thiago.persiani/Desktop/Estudo power bi/Cap12")
?read.table
dados <- read.table("Usuarios.csv",
dec = ".",
sep = ",",
h= T,
fileEncoding = "windows-1252"
)
#Tabela de frequência absoluta
freq<- table(dados$grau_instrucao)
View(freq)
#Tabela de frequências Relativas
freq_rel <- prop.table(freq)
View(freq_rel)
#Porcentagem(100* freq_rel_table)
p_freq_rel <-100* prop.table(freq_rel)
View(p_freq_rel)
#Adiciona linhas de total
freq <- c(freq,sum(freq))
View(freq)
names(freq) [4] <- "Total"
View(freq)
#Tabela final com todos os valores
#Calculamos frênquencia relativa e frequência proporcional
freq_rel <- c(freq_rel, sum(freq_rel))
p_freq_rel <- c(p_freq_rel,sum(p_freq_rel))
#Tabela final com todos os vetores
tabela_final <- cbind(freq,
freq_rel =round( freq_rel,digits=2 ),
p_freq_rel = round(p_freq_rel, digits=2))
View(tabela_final)
setwd("C:/Users/thiago.persiani/Desktop/Estudo power bi/Cap12")
#Dados
vetor_total_resultados = c(3,12,5,18,45)
names(vetor_total_resultados) = c("A", "B","C","D","E")
vetor_total_resultados
setwd("C:/Users/thiago.persiani/Desktop/Estudo power bi/Cap12")
#Dados
vetor_total_resultados = c(3,12,5,18,45)
names(vetor_total_resultados) = c("A", "B","C","D","E")
vetor_total_resultados
?barplot
barplot(vetor_total_resultados)
barplot(vetor_total_resultados, col= c(1,2,3,4,5))
#Salvando o grafico em disco
png("barplot.png" , width = 480, height = 480)
barplot(vetor_total_resultados,
col = rgb(0.5,0.1,0.6,0.6),
xlab = "Categorias",
yblab = "Valores",
main= "Barplot em R",
ylin= c(0,60)
)
dev.off()
# Ggplot2
library(ggplot2)
View(mtcars)
# Barplot
ggplot(mtcars, aes(x = as.factor(cyl) )) +
geom_bar()
ggplot(mtcars, aes(x = as.factor(cyl), fill = as.factor(cyl) )) +
geom_bar( ) +
scale_fill_manual(values = c("red", "green", "blue"))
# Criando dados dummy (fictÃ­cios)
dados = data.frame(group = c("A ","B ","C ","D ") , value = c(33,62,56,67))
View(dados)
# Barplot
ggplot(dados, aes(x = group, y = value ,fill = group )) +
geom_bar(width = 0.85, stat = "identity")
fatias <- c(4, 12, 14, 16, 8)
paises <- c("Brasil", "Estados Unidos", "Alemanha", "Reino Unido", "Espanha")
?pie
pie(fatias, labels = paises, main = "Leitura de Livros Por Pessoa/Ano")
# Pie Chart 3D
install.packages("plotrix")
library(plotrix)
fatias <- c(4, 12, 14, 16, 8)
paises <- c("Brasil", "Estados Unidos", "Alemanha", "Reino Unido", "Espanha")
?pie3D
pie3D(fatias, labels = paises, explode = 0.1, main = "Leitura de Livros Por Pessoa/Ano")
# Dados
carros <- c(1, 3, 6, 4, 9)
caminhoes <- c(2, 5, 4, 5, 12)
# Plot
plot(carros, type = "o", col = "blue", ylim = c(0,12))
lines(caminhoes, type = "o", pch = 22, lty = 2, col = "red")
title(main = "ProduÃ§Ã£o de VeÃ­culos", col.main = "red", font.main = 4)
# Plot
plot(carros, type = "o", col = "blue", ylim = c(0,12))
lines(caminhoes, type = "o", pch = 22, lty = 2, col = "red")
title(main = "Produção de Veículos", col.main = "red", font.main = 4)
##### Boxplot #####
library(ggplot2)
View(mpg)
# Plot
ggplot(mpg, aes(x = reorder(class, hwy), y = hwy, fill = class)) +
geom_boxplot() +
xlab("class") +
theme(legend.position = "none")
library(ggplot2)
data = data.frame(cond = rep(c("condition_1", "condition_2"), each=10),
my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16))
View(data)
# Plot
ggplot(mpg, aes(x = reorder(class, hwy), y = hwy, fill = class)) +
geom_boxplot() +
xlab("class") +
theme(legend.position = "none")
# Plot
ggplot(mpg, aes(x = reorder(class, hwy), y = hwy, fill = class)) +
geom_boxplot() +
xlab("class") +
theme(legend.position = "none")
##### Scatter Plot #####
library(ggplot2)
data = data.frame(cond = rep(c("condition_1", "condition_2"), each=10),
my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16))
View(data)
ggplot(data, aes(x=my_x, y=my_y)) +
geom_point(shape=1)
library(ggplot2)
View(mpg)
# Plot
ggplot(mpg, aes(x = reorder(class, hwy), y = hwy, fill = class)) +
geom_boxplot() +
xlab("class") +
theme(legend.position = "none")
##### Scatter Plot #####
library(ggplot2)
data = data.frame(cond = rep(c("condition_1", "condition_2"), each=10),
my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16))
install.packages("treemap")
library(treemap)
# Dados
grupo = c(rep("grupo-1",4), rep("grupo-2",2), rep("grupo-3",3))
subgrupo = paste("subgroup", c(1,2,3,4,1,2,1,2,3), sep = "-")
valor = c(13,5,22,12,11,7,3,1,23)
dados = data.frame(grupo, subgrupo, valor)
View(dados)
# Labels
?treemap
treemap(dados,
index = c("grupo", "subgrupo"),
vSize = "valor",
type = "index",
fontsize.labels = c(15,12),
fontcolor.labels = c("white", "orange"),
fontface.labels = c(2,1),
bg.labels = 220,
align.labels = list(c("center", "center"), c("right", "bottom")),
overlap.labels = 0.5,
inflate.labels = F)
# Customizando
treemap(dados,
index = c("grupo", "subgrupo"),
vSize = "valor",
type = "index",
border.col = c("black", "white"),
border.lwds = c(7,2))
# Gerando valores para x
x <- mtcars$mpg
# Criando o histograma
?hist
h <- hist(x,
breaks = 10,
col = "red",
xlab = "Milhas Por Galão",
main = "Histograma com Curva de Distribuiçao")
# Customizando o histograma
xfit <- seq(min(x), max(x), length = 40)
yfit <- dnorm(xfit, mean = mean(x), sd = sd(x))
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col = "blue", lwd = 2)
# dataset
dados = data.frame(value = rnorm(10000))
View(dados)
# Tamanho das colunas
ggplot(dados, aes(x=value)) +
geom_histogram(binwidth = 0.05)
# Cor uniforme
ggplot(dados, aes(x=value)) +
geom_histogram(binwidth = 0.2, color="white", fill=rgb(0.2,0.7,0.1,0.4) )
# Cor proporcional
ggplot(dados, aes(x=value)) +
geom_histogram(binwidth = 0.2, aes(fill = ..count..) )
dados = data.frame(value = rnorm(10000))
View(dados)
# Tamanho das colunas
ggplot(dados, aes(x=value)) +
geom_histogram(binwidth = 0.05)
# Usando o ggplot2
library(ggplot2)
# dataset
dados = data.frame(value = rnorm(10000))
View(dados)
# Tamanho das colunas
ggplot(dados, aes(x=value)) +
geom_histogram(binwidth = 0.05)
# Cor uniforme
ggplot(dados, aes(x=value)) +
geom_histogram(binwidth = 0.2, color="white", fill=rgb(0.2,0.7,0.1,0.4) )
# Cor propo
# Cor proporcional
ggplot(dados, aes(x=value)) +
geom_histogram(binwidth = 0.2, aes(fill = ..count..) )
setwd("C:/Users/thiago.persiani/Desktop/Estudo power bi/Cap12")
#Instalando os pacotes
install.packages("dplyr")
install.packages("data.table")
install.packages("ggplot2")
library(dplyr)
library(data.table)
library(ggplot2)
dados_iris <- iris
View(dados_iris)
library(dplyr)
medias_iris <- summarize(
group_by(dados_iris, Species),
media_sepal_length = mean(Sepal.Length),
media_sepal_width = mean(Sepal.Width),
media_petal_length = mean(Petal.Length),
media_petal_width = mean(Petal.Width)
)
View(medias_iris)
library(data.table)
dados_iris_id <-dados_iris
View(dados_iris_id)
dados_iris_id$Sepal.Length<- as.integer(dados_iris_id$Sepal.Length)
View(dados_iris_id)
library(data.table)
dados_iris_id <-data.table(dados_iris)
dados_iris_id$Sepal.Length <- as.integer(dados_iris_id$Sepal.Length)
library(data.table)
dados_iris_id <-data.table(dados_iris)
dados_iris_id$Sepal.Length <- as.integer(dados_iris_id$Sepal.Length)
library(ggplot2)
ggplot(data=dados_iris , aes(x=Peral.Width , y =Peral.Length))+
geopoint(aes(color=Species), size= 3)+
ggtitle("Largura e comprimento das petalas")+
labs(
x="Largura da petala",
y="Altura da petala") +
theme_bw() +
theme (title = element_text(size=15, color= "turquoise4"))
dados_iris_id$Sepal.Length <- as.integer(dados_iris_id$Sepal.Length)
library(ggplot2)
ggplot(data=dados_iris , aes(x=Peral.Width , y =Peral.Length))+
geom_point(aes(color=Species), size= 3)+
ggtitle("Largura e comprimento das petalas")+
labs(
x="Largura da petala",
y="Altura da petala") +
theme_bw() +
theme (title = element_text(size=15, color= "turquoise4"))
library(ggplot2)
ggplot(data=dados_iris , aes(x=Peral.Width , y =Peral.Length))+
geom_point(aes(color=Species), size= 3)+
ggtitle("Largura e comprimento das petalas")+
labs(
x="Largura da petala",
y="Altura da petala") +
theme_bw() +
theme (title = element_text(size=15, color= "turquoise4"))
library(ggplot2)
ggplot(data=dados_iris , aes(x=Petal.Width , y =Petal.Length))+
geom_point(aes(color=Species), size= 3)+
ggtitle("Largura e comprimento das petalas")+
labs(
x="Largura da petala",
y="Altura da petala") +
theme_bw() +
theme (title = element_text(size=15, color= "turquoise4"))
colours()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
